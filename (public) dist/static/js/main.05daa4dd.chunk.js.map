{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectAction.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","firebase","getFirebase","auth","then","logout","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","links","uid","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","authorID","Date","App","exact","path","component","ProjectDetails","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05daa4dd.chunk.js","sourcesContent":["import React, { Profiler } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className = 'right'>\r\n            <li><NavLink to = '/create'>New Project</NavLink></li>\r\n            <li><a onClick={ props.signOut }>Log Out</a></li>\r\n            <li><NavLink to = '/' className = 'btn btn-floating pink lighten-1'>\r\n                {/* this only works with user creating a profile, not created inside firebase */}\r\n                {props.profile.initials}\r\n            </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            firebase.logout()\r\n            dispatch({ type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })        \r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className = 'right'>\r\n            <li><NavLink to = '/signup'>Signup</NavLink></li>\r\n            <li><NavLink to = '/signin'>Login</NavLink></li>\r\n        </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    // console.log(auth)\r\n    const links = auth.uid ? <SignedInLinks profile = {profile} /> : <SignedOutLinks />; \r\n    return (\r\n        <nav className = 'nav-wrapper grey darken-3'>\r\n            <div className = 'container'>\r\n                <Link to = '/' className = 'brand-logo'>Simple Planning</Link>\r\n                \r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps) (Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notification = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className = 'section'>\r\n            <div className='card z-depth-0'>\r\n                <div className = 'card-content'>\r\n                    <span className = 'card-title'>Notification</span>\r\n                    <ul className = 'notification'>\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className = 'pink-text'>{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className = 'grey-text note-date'>\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className = 'card z-depth-0 project-summary'>\r\n            <div className = 'card-content grey-text text-darken-3'>\r\n                <span className = 'card-title'>{project.title}</span>\r\n                <p> Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className = 'grey-text'>{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>    \r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    \r\n    return (\r\n        <div className = 'project-list section'>\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to = {'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n\r\n            })}\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react'\r\nimport Notification from './Notification'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        // console.log(this.props);\r\n        const { projects, auth, notifications } = this.props;\r\n        if(!auth.uid) return <Redirect to = '/signin' />\r\n\r\n        return (\r\n            <div className = 'dashboard container'>\r\n                <div className = 'row'>\r\n                    {/* 12 column on small screen and 6 in medium...*/}\r\n                    <div className = 'col s12 m6'>\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className = 'col s12 m5 offset-m1'>\r\n                        <Notification notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state); \r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n) (Dashboard)\r\n\r\n//connect(mapStateToProps) (Dashboard);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n        if (!auth.uid) return <Redirect to = '/signin' />\r\n\r\n    if (project) {\r\n        return (\r\n            <div className = 'container section project-details'>\r\n                <div className = 'card z-depth-0'>\r\n                    <div className = 'card-content'>\r\n                        <span className = 'card-title'> { project.title }</span>\r\n                        <p> {project.content }</p>\r\n                    </div>\r\n                    <div className = 'card-action grey lighten-4 grey-text'>\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div> {moment(project.createdAt.toDate()).calendar()} </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className = 'container center'>\r\n                <p>Loading project... </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        // grabbing project (not projects) from above\r\n        project: project, \r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects' }\r\n    ])\r\n\r\n)(ProjectDetails)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to = '/' />\r\n\r\n        return (\r\n            <div className = 'container'>\r\n                <form onSubmit = {this.handleSubmit} className = 'white'>\r\n                    <h5 className = 'grey-text text-darken-3'>Sign In</h5>\r\n                    <div className = 'input-field'>\r\n                        <label htmlFor = 'email'>Email</label>\r\n                        <input type = 'email' id = 'email' onChange = {this.handleChange}/>\r\n                    </div>\r\n                    <div className = 'input f ield'>\r\n                        <label htmlFor = 'password'>Password</label>\r\n                        <input type = 'password' id = 'password' onChange = {this.handleChange}/> \r\n                    </div>\r\n                    <div className = 'input-field'>\r\n                        <button className = 'btn pink lighten-1 z-depth-0'>Login</button>\r\n                        <div className = 'red-text center'>\r\n                            {authError ? <p>{ authError }</p>: null } \r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SignIn)","import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nexport class SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '' \r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const {auth, authError} = this.props;\r\n        if (auth.uid) return < Redirect to = '/' />\r\n\r\n        return (\r\n            <div className = 'container'>\r\n                <form onSubmit = {this.handleSubmit} className = 'white'>\r\n                    <h5 className = 'grey-text text-darken-3'>Sign Up</h5>\r\n                    <div className = 'input-field'>\r\n                        <label htmlFor = 'email'>Email</label>\r\n                        <input type = 'email' id = 'email' onChange = {this.handleChange}/>\r\n                    </div>\r\n                    <div className = 'input field'>\r\n                        <label htmlFor = 'password'>Password</label>\r\n                        <input type = 'password' id = 'password' onChange = {this.handleChange}/> \r\n                    </div>\r\n                    <div className = 'input field'>\r\n                        <label htmlFor = 'lastName'>Last Name</label>\r\n                        <input type = 'text' id = 'lastName' onChange = {this.handleChange}/> \r\n                    </div>\r\n                    <div className = 'input field'>\r\n                        <label htmlFor = 'firstName'>First Name</label>\r\n                        <input type = 'text' id = 'firstName' onChange = {this.handleChange}/> \r\n                    </div>\r\n                    <div className = 'input-field'>\r\n                        <button className = 'btn pink lighten-1 z-depth-0'>Sign Up</button>\r\n                        <div className = 'red-text center'>\r\n                            { authError ? <p>{ authError}</p> : null}\r\n                        </div>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) =>  dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SignUp)","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectAction'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { projects, auth } = this.props;\r\n        if (!auth.uid) return <Redirect to = '/signin' />\r\n\r\n        return (\r\n            <div className = 'container'>\r\n                <form onSubmit = {this.handleSubmit} className = 'white'>\r\n                    <h5 className = 'grey-text text-darken-3'>Create New Projects</h5>\r\n                    <div className = 'input-field'>\r\n                        <label htmlFor = 'title'>Title</label>\r\n                        <input type = 'text' id = 'title' onChange = {this.handleChange}/>\r\n                    </div>\r\n                    <div className = 'input field'>\r\n                        <label htmlFor = 'content'>Project Content</label>\r\n                        <textarea id = 'content' className = 'materialize-textarea'onChange = {this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className = 'input-field'>\r\n                        <button className = 'btn pink lighten-1 z-depth-0'>Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(CreateProject)","export const createProject = (project) => {\r\n    // when using Thunk, we can return a function\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorID: authorId,\r\n            createdAt: new Date()\r\n        })\r\n        .then(() => { dispatch({type: 'CREATE_PROJECT', project});\r\n        })\r\n        .catch((err) => { dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n\r\n    }\r\n};","import React from 'react'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          {/* When user goes to /, load the Dashboard component*/}\n          <Route exact path = '/' component = { Dashboard } />\n          <Route path = '/project/:id' component = { ProjectDetails } />\n          <Route path = '/signin' component = { SignIn } />\n          <Route path = '/signup' component = { SignUp } />\n          <Route path = '/create' component = {CreateProject} />\n\n\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initState = {\r\n    authError: null\r\n\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR': \r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS': \r\n            console.log('login success');\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n             console.log('signup error')\r\n             return {\r\n                 ...state,\r\n                 authError: action.err.message\r\n             }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer","{/* In this file, we are passing the project from dashboard to project list.  \r\nWe are passing data as props and then to the project summary*/}\r\n\r\nconst initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect stars', content: 'blah blah blah again'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah again and again'}\r\n    ]\r\n}\r\n\r\n\r\n{/* this is going to set the state equal to the initial state and 'return state' */}\r\n{/* this is set the state equal to the initial */}\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'CREATE_PROJECT': \r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore'\r\n\r\n\r\nconst rootReducer =  combineReducers({\r\n    auth: authReducer,\r\n\r\n    // the state from 'projectReducer' will store under project property\r\n    project: projectReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n})\r\n\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar Config = {\r\n    apiKey: \"AIzaSyAltfXx7oDaXK0nPAmAd9mCprFQYvIk5s8\",\r\n    authDomain: \"simpleplan-687b3.firebaseapp.com\",\r\n    databaseURL: \"https://simpleplan-687b3.firebaseio.com\",\r\n    projectId: \"simpleplan-687b3\",\r\n    storageBucket: \"simpleplan-687b3.appspot.com\",\r\n    messagingSenderId: \"829523404646\",\r\n    appId: \"1:829523404646:web:cda6daaa67ecefad968aa7\",\r\n    measurementId: \"G-YDV9BEW6CM\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(Config);\r\n  //firebase.analytics();\r\n// firebase.firestore().settings({timestampsInSnapshots: true});\r\nfirebase.firestore().settings({});\r\n\r\n\r\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })), \n        reduxFirestore(fbConfig), \n\n        // using 'useFirestoreForProfile' and 'userProfile to display logged in profile firstName and lastName\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\n// wait until firebase auth is ready\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    // registerServiceWorker();\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\n// \n"],"sourceRoot":""}